
naming:
  - description: |
      All names must only contain ASCCI letters. And be compliaten to to the domain
      specification


ingress:
  key: /api/v1.0/applications/poseidon/ingress/poseidon.com
  storage: .proto
  example:
    hosts: poseidon.com
    ipv6: true 
    tls: 
      name: /api/v1.0/applications/poseidon/tls/poseidon.com
    http:
      paths:
        - path: /**
          type: prefix
          service:
            name: /api/v1.0/applications/poseidon/service/frontend
        - path: /rick
          type: exact
          service:
            name: /api/v1.0/applications/poseidon/service/rickroll

tls:
  key: /api/v1.0/applications/poseidon/tls/poseidon.com
  storage: .proto
  example:
    domain: poseidon.com
    state: obtain | renew
    expires: unix-time # 64bit only valid if in renew
    privkey: string
    fullchain: string
    
# config for nginx:
#     
#     poseidon.com.conf/
#       - server.conf
#       - locations/
#         - base64-string.conf (location id; for acme-challenge = "location /.well-known/acme-challenge/"

# ingress-daemon start to work and goes over every host
# takes one, and see that TLS is defined
#   calls tls-daemon to take care
#     checks if tls is already defined
#     if: (0)
#       verifies it is also set correctly to the nginx server
#       if not:
#         sets the certificates and reloads (over the ingress-daemon)
#
#     if not:
#       verify if the server is reachable via http on the defined domain
#       if not:
#         cancel and set error
#
#       sets an endpoint to the ingress (over the ingress-daemon)
#       runs http00 challenge
#
#       store data into bolt (if we know crash and recover, we use the keys)
#
#       do (0) 
#


service:
  key: /api/v1.0/applications/poseidon/service/poseidon.com

